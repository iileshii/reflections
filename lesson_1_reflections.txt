How did viewing a diff between two versions of a file help you see the bug that was introduced?

Type on command line (win): FC _file1_ _file2_

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

You can find errors and fix bugs faster then withoun version control

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?

Pros are you have to abbility to commit after logical changes and you can add comments every change you made.
Cons are you may forget to commit, you need to spend your time to make commit, you should remember everytime to make a commit

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

So, Some VCS handled one-file-projects. For instance, if I made changes in a wiki-article I don't need to save other files.
Git is an universal systems as far as I know. Git supports multifile project for that reason.

How can you use the commands git log and git diff to view the history of files?

git log show all commits of the repository. git diff shows defferences between two commits

How might using version control make you more confident to make changes that could break something?

You may restore last version very quickly

Now that you have your workspace set up, what do you want to try using Git for?

I want to create my own project on Java and push that. In addition I want to create my own novel :)